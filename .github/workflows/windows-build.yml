name: Build and Auto-Release Zed on Windows

# Trigger on pushes to main
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Grant write permission to create tags/releases
permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Enable long path support on Windows
        shell: powershell
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force

      - name: Configure Git to support long paths
        run: git config --system core.longpaths true

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for tag operations

      - name: Clean cargo cache
        run: cargo clean

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Set up MSVC build tools using Chocolatey
        shell: powershell
        run: |
          choco install visualstudio2022buildtools --yes --force --no-progress --package-parameters `
            "--add Microsoft.VisualStudio.Workload.VCTools `
            --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
            --add Microsoft.VisualStudio.Component.VC.CMake.Project `
            --add Microsoft.VisualStudio.Component.Windows11SDK.26100 `
            --add Microsoft.VisualStudio.Component.VC.Runtimes.x86.x64.Spectre `
            --includeRecommended --includeOptional"

      - name: Install CMake
        shell: powershell
        run: choco install cmake --yes --force --no-progress --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Add Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build (Release)
        run: cargo build --release

      # ----------------------------------------------------------
      # Auto-tag based on Cargo.toml version
      # ----------------------------------------------------------
      - name: Auto-tag from Cargo.toml
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        shell: bash
        run: |
          version=$(grep -Po 'version\s*=\s*"\K[0-9]+\.[0-9]+\.[0-9]+' Cargo.toml)
          tag="v$version"
          echo "Tagging release with $tag"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $tag
          git push origin $tag
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      # ----------------------------------------------------------
      # Create GitHub Release when a tag is pushed
      # ----------------------------------------------------------
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: target/release/zed*.exe
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ----------------------------------------------------------
      # Upload artifact for PR or non-main builds (optional)
      # ----------------------------------------------------------
      - name: Upload Release Executable as Artifact
        if: github.event_name == 'pull_request' || (github.ref == 'refs/heads/main' && github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/'))
        uses: actions/upload-artifact@v4
        with:
          name: zed-ci-executable
          path: target/release/zed*.exe
